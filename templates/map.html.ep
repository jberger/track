<!DOCTYPE html>
<html>
  <head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 100%;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>
    %= javascript 'websocket_multiplex.js'

    <script>
      var map;
      var username = '<%== session 'username' %>';
      var markers = {};
      var channels = {};

      function addPath(path) {
        var pathLine = new google.maps.Polyline({
          'path': path,
          geodesic: true,
          strokeColor: '#FF0000',
          strokeOpacity: 1.0,
          strokeWeight: 2
        });

        pathLine.setMap(map);
        fitBounds(path);
      }

      function updateMarker(user) {
        if (!map) return;
        if (!user) return;

        var loc = user.location;
        var pos = {lat: loc.lat, lng: loc.lon}

        var marker;
        if (_.has(markers, user.username)) {
          marker = markers[user.username];
          marker.setPosition(pos);
        } else {
          var title = _.toUpper(loc.tid);
          marker = new google.maps.Marker({
            map: map,
            position: pos,
            label: title,
            'title': title,
          });
          markers[user.username] = marker;
        }

        fitBounds(_.values(markers));
        return marker;
      }

      function fitBounds(points) {
        var bounds = new google.maps.LatLngBounds();
        _.each(points, function(point) {
          if ('getPosition' in point) point = point.getPosition();
          bounds.extend(point);
        });
        map.fitBounds(bounds);
      }

      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {});
        fetch('/api/user', {credentials: 'include'})
          .then(function(response) { return response.json() })
          .then(function(user) { updateMarker(user) });
      }

      var ws = new WebSocket('<%= url_for('multiplex')->to_abs %>');
      var multiplex = new WebSocketMultiplex(ws);
      channels[username] = multiplex.channel('users.' + username);
      channels[username].onmessage = function(e){
        var user = JSON.parse(e.data);
        updateMarker(user);
      };
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.16.1/lodash.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=<%== $c->app->config->{google_api_key}  %>&callback=initMap"
    async defer></script>
  </body>
</html>

